services:
  configsvr01:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: mongo-config-01
    volumes:
      - configsvr01_db:/data/db
      - ./scripts:/scripts
    command:
      [
        "--configsvr",
        "--replSet",
        "rs-config-server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27017" ]
      interval: 5s
      start_period: 10s
    networks:
      app-network:

  configsvr02:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: mongo-config-02
    volumes:
      - configsvr02_db:/data/db
      - ./scripts:/scripts
    command:
      [
        "--configsvr",
        "--replSet",
        "rs-config-server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27017" ]
      interval: 5s
      start_period: 10s
    networks:
      app-network:

  configsvr03:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: mongo-config-03
    volumes:
      - configsvr03_db:/data/db
      - ./scripts:/scripts
    command:
      [
        "--configsvr",
        "--replSet",
        "rs-config-server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27017" ]
      interval: 5s
      start_period: 10s
    networks:
      app-network:

  router01:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: router-01
    volumes:
      - router01_db:/data/db
      - ./scripts:/scripts
    command:
      [
        "mongos",
        "--configdb",
        "rs-config-server/mongo-config-01:27017,mongo-config-02:27017,mongo-config-03:27017",
        "--bind_ip_all",
        "--port",
        "27017",
      ]
    depends_on:
      - configsvr01
      - configsvr02
      - configsvr03
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27017" ]
      interval: 5s
      start_period: 10s
    networks:
      app-network:

  router02:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: router-02
    volumes:
      - router02_db:/data/db
      - ./scripts:/scripts
    command:
      [
        "mongos",
        "--configdb",
        "rs-config-server/mongo-config-01:27017,mongo-config-02:27017,mongo-config-03:27017",
        "--bind_ip_all",
        "--port",
        "27017",
      ]
    depends_on:
      - configsvr01
      - configsvr02
      - configsvr03
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27017" ]
      interval: 5s
      start_period: 10s
    networks:
      app-network:

  router03:
    image: dh-mirror.gitverse.ru/mongo:latest
    container_name: router-03
    volumes:
      - router03_db:/data/db
      - ./scripts:/scripts
    command:
      [
        "mongos",
        "--configdb",
        "rs-config-server/mongo-config-01:27017,mongo-config-02:27017,mongo-config-03:27017",
        "--bind_ip_all",
        "--port",
        "27017",
      ]
    depends_on:
      - configsvr01
      - configsvr02
      - configsvr03
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27017" ]
      interval: 5s
      start_period: 10s
    networks:
      app-network:

  shard01-a:
    container_name: shard-01-node-a
    image: dh-mirror.gitverse.ru/mongo:latest
    volumes:
      - shard01_a_db:/data/db
      - ./scripts:/scripts
    command:
      [
        "--shardsvr",
        "--replSet",
        "rs-shard-01",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27017" ]
      interval: 5s
      start_period: 10s
    networks:
      app-network:

  shard02-a:
    container_name: shard-02-node-a
    image: dh-mirror.gitverse.ru/mongo:latest
    volumes:
      - shard02_a_db:/data/db
      - ./scripts:/scripts
    command:
      [
        "--shardsvr",
        "--replSet",
        "rs-shard-02",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')", "--port", "27017"  ]
      interval: 5s
      start_period: 10s
    networks:
      app-network:

  init-configsvr:
    container_name: init-configsvr
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: "on-failure"
    volumes:
      - ./scripts:/scripts
    command:
      [
        "mongosh",
        "--host",
        "mongo-config-01",
        "--port",
        "27017",
        "--file",
        "/scripts/init-configserver.js"
      ]
    networks:
      app-network:
    depends_on:
      - configsvr01
      - configsvr02
      - configsvr03

  init-router:
    container_name: init-router
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: "on-failure"
    volumes:
      - ./scripts:/scripts
    command:
      [
        "mongosh",
        "--host",
        "router-01",
        "--port",
        "27017",
        "--file",
        "/scripts/init-router.js"
      ]
    networks:
      app-network:
    depends_on:
      - router01
      - router02
      - router03
      - init-shard01
      - init-shard02

  init-shard01:
    container_name: init-shard01
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: "on-failure"
    volumes:
      - ./scripts:/scripts
    command:
      [
        "mongosh",
        "--host",
        "shard-01-node-a",
        "--port",
        "27017",
        "--file",
        "/scripts/init-shard01.js"
      ]
    networks:
      app-network:
    depends_on:
      - shard01-a

  init-shard02:
    container_name: init-shard02
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: "on-failure"
    volumes:
      - ./scripts:/scripts
    command:
      [
        "mongosh",
        "--host",
        "shard-02-node-a",
        "--port",
        "27017",
        "--file",
        "/scripts/init-shard02.js"
      ]
    networks:
      app-network:
    depends_on:
      - shard02-a

  init-data:
    container_name: init-data
    image: dh-mirror.gitverse.ru/mongo:latest
    restart: "on-failure"
    volumes:
      - ./scripts:/scripts
    command:
      [
        "mongosh",
        "--host",
        "router-01",
        "--port",
        "27017",
        "--file",
        "/scripts/init-data.js"
      ]
    networks:
      app-network:
    depends_on:
      - router01
      - router02
      - router03
      - init-router
      - init-shard01
      - init-shard02

  pymongo_api:
    container_name: pymongo_api
    build:
      context: api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - shard01-a
      - shard02-a
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://router-01"
      MONGODB_DATABASE_NAME: "somedb"
    networks:
      app-network:

volumes:
  shard01_a_db:
  shard02_a_db:
  configsvr01_db:
  configsvr02_db:
  configsvr03_db:
  router01_db:
  router02_db:
  router03_db:

networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16